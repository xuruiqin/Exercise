# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        dummy_node = ListNode(-1)
        dummy_node.next = head

        pre = dummy_node
        tail = dummy_node.next

        number = 0

        while(tail):
            tail = tail.next
            number += 1
        #print(number)

        if(number < n):
            return dummy_node.next

        if(number == n):
            return dummy_node.next.next


        index = number - n + 1

        for _ in range(index-1):
            pre = pre.next
            #print(pre.val)
            
        #cur = pre.next
        next_node = pre.next.next
        #cur.next = next_node.next
        #next_node.next = pre.next
        pre.next = next_node

        return dummy_node.next


        
        
