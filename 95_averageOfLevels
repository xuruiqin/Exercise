# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def averageOfLevels(self, root: Optional[TreeNode]) -> List[float]:
        if(not root):
            return []

       
        que = deque([root])
        res = []    

        while(que):
            level_sum, level_size = 0, len(que)
            for _ in range(level_size):
                node = que.popleft()
                level_sum += node.val

                if(node.left):
                    que.append(node.left)
                if(node.right):
                    que.append(node.right)

            res.append(level_sum/level_size)

        return res
           
