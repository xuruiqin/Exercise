# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if(k==0 or not head or not head.next):
            return head
        
        n = 1
        cur = head
        while(cur.next):
            cur = cur.next
            n += 1
        #print('----------------------------------')

        m = k%n
        if(m == 0):
            return head
        
        cur.next = head #首尾相连
        for _ in range(n-m):#向左移动n-m，相当于向右移动m
            cur = cur.next

        res = cur.next#cur为尾，cur.next为头
        cur.next = None #断开环链，使尾cur指向None
        
        return res


