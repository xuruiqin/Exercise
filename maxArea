class Solution:
    def maxArea(self, height: List[int]) -> int:
        n = len(height)
        start = 0
        end = n-1
        ans = 0
        while start < end:
            ans = max(min(height[start], height[end])*(end-start), ans)
            if(height[start] <= height[end]):
                start += 1
            else:
                end -= 1
        return ans
            
    '''
    def volume(self, height: List[int], i: int, j: int) -> int:
        h = min(height[i], height[j])
        return h*(j-i)
    '''
'''
给定一个长度为 n 的整数数组 height 。有 n 条垂线，第 i 条线的两个端点是 (i, 0) 和 (i, height[i]) 。

找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。

返回容器可以储存的最大水量。

说明：你不能倾斜容器。
'''

        
