class Solution:
    def canCompleteCircuit(self, gas: List[int], cost: List[int]) -> int:
        n = len(gas)
        i = 0
        while i<n:
            sum_gas=sum_cost=0
            count = 0 #记录经过的站点数
            while count < n: #从当前i开始，绕一圈
                j = (i + count) % n
                sum_gas += gas[j]
                sum_cost += cost[j]
                if(sum_gas < sum_cost):#一旦油不够，说明当前站点开始行不通
                    break
                count += 1
            if(count == n):#成功绕一圈，返回i
                return i
            else:
                i+=count+1 #没有绕完一圈，说明从站点i至站点i+count的站点都不符合要求
        return -1 
'''
在一条环路上有 n 个加油站，其中第 i 个加油站有汽油 gas[i] 升。

你有一辆油箱容量无限的的汽车，从第 i 个加油站开往第 i+1 个加油站需要消耗汽油 cost[i] 升。你从其中的一个加油站出发，开始时油箱为空。

给定两个整数数组 gas 和 cost ，如果你可以按顺序绕环路行驶一周，则返回出发时加油站的编号，否则返回 -1 。如果存在解，则 保证 它是 唯一 的。
'''
