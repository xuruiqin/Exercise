# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isValidBST(self, root: Optional[TreeNode]) -> bool:
        self.pre = None
        return self.dfs(root)


    def dfs(self, root: Optional[TreeNode]) -> bool:
        if(not root):
            return True

        if(not self.dfs(root.left)):
            return False
        if(self.pre is None):
            self.pre = root.val
        else:
            if(self.pre >= root.val):
                return False
            else:
                self.pre = root.val
        
        return self.dfs(root.right)
