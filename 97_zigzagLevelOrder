# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def zigzagLevelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        if(not root):
            return []

        que = deque([root])
        res = []

        direction = True

        while(que):
            size = len(que)
            level = []
            for _ in range(size):
                node = que.popleft()
                level.append(node.val)
                
                if(node.left):
                    que.append(node.left)
                if(node.right):
                    que.append(node.right)

            if(direction):
                res.append(level)
            else:
                res.append(list(reversed(level))) #level[::-1]

            direction = not direction

        return res
            
                    
